// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`convertElementColorsToStyleKeys > generates style keys for multiple palette entries 1`] = `
{
  "p1": {
    "danger": {
      "focus": [
        "borderColor==focus__[10,20,30,0.1]",
      ],
      "rest": [
        "borderColor--rest__[0,0,0,0.02]",
      ],
    },
    "primary": {
      "hover": [
        "textColor==hover__[240,50,50,0.5]",
      ],
      "rest": [
        "textColor--rest__[120,50,50,1]",
        "borderColor--rest__[120,50,50,1]",
      ],
    },
    "secondary": {
      "rest": [
        "textColor--rest__[240,50,50,0.5]",
      ],
    },
  },
}
`;

exports[`convertElementColorsToStyleKeys > generates style keys for palette property with a reference value 1`] = `
{
  "p1": {
    "primary": {
      "hover": [
        "borderColor==hover__[255,255,255,0.1]",
      ],
      "rest": [
        "borderColor--rest__[255,255,255,1]",
      ],
    },
  },
}
`;

exports[`convertElementColorsToStyleKeys > generates style keys for palette property without reference 1`] = `
{
  "p1": {
    "primary": {
      "rest": [
        "boxColor--rest__[45,100,50,1]",
      ],
    },
  },
}
`;

exports[`convertElementColorsToStyleKeys > includes parent style keys when only reference interaction states are provided 1`] = `
{
  "element": {
    "p1": {
      "primary": {
        "focus": [
          "boxColor==focus__[40,50,60,0.5]",
        ],
        "hover": [
          "boxColor==hover__[10,20,30,1]",
        ],
        "rest": [
          "boxColor--rest__[0,128,255,1]",
        ],
      },
    },
  },
  "parent": [
    "==hover",
    "==focus",
  ],
}
`;

exports[`convertElementColorsToStyleKeys > treats direct interaction-state map as neutral semantic color 1`] = `
{
  "p1": {
    "neutral": {
      "hover": [
        "boxColor==hover__[0,128,255,0.5]",
      ],
      "rest": [
        "boxColor--rest__[0,128,255,1]",
      ],
    },
  },
}
`;
