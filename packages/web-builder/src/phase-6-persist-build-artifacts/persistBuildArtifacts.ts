import { mkdir, writeFile } from 'node:fs/promises';
import { dirname, resolve } from 'node:path';
import { fileURLToPath } from 'node:url';
import type { ComponentClassNameMap } from '../phase-5-generate-class-names-map/generateClassNamesMap';

/**
 * Phase 6 - Persist build artifacts generated by previous phases
 * - Writes CSS to build/kiskadee.css
 * - Writes classNamesMap to build/classNamesMap.{js,d.ts}
 */
export async function persistBuildArtifacts(
  cssGenerated: string,
  classNamesMap: ComponentClassNameMap
): Promise<void> {
  const __filename = fileURLToPath(import.meta.url);
  const __dirname = dirname(__filename);

  // Ensure build dir exists
  const buildDir = resolve(__dirname, '..', '..', 'build');
  await mkdir(buildDir, { recursive: true });

  // Persist CSS
  const outCssFile = resolve(buildDir, 'kiskadee.css');
  await writeFile(outCssFile, cssGenerated, 'utf8');
  console.log(`[web-builder] CSS written to: ${outCssFile}`);

  // Persist classNamesMap (JS + DTS)
  const classNamesOutFileJs = resolve(buildDir, 'classNamesMap.js');
  const classNamesOutFileDts = resolve(buildDir, 'classNamesMap.d.ts');

  const classNamesJs = `// This file is auto-generated by web-builder. Do not edit manually.\n\nconst classNamesMap = ${JSON.stringify(
    classNamesMap,
    null,
    2
  )};\nexport default classNamesMap;\n`;

  const classNamesDts = `// This file is auto-generated by web-builder. Do not edit manually.\n\nexport type ClassNamesByInteractionState = Partial<Record<string, string[]>>;\nexport type ClassNameByElement = { decorations?: string[]; effects?: ClassNamesByInteractionState; scales?: Partial<Record<string, string[]>>; palettes?: Record<string, Partial<Record<string, ClassNamesByInteractionState>>> };\nexport type ComponentClassNameMap = Partial<Record<string, Record<string, ClassNameByElement>>>;\n\ndeclare const classNamesMap: ComponentClassNameMap;\nexport default classNamesMap;\n`;

  await writeFile(classNamesOutFileJs, classNamesJs, 'utf8');
  await writeFile(classNamesOutFileDts, classNamesDts, 'utf8');
  console.log(
    `[web-builder] ClassNames map written to: ${classNamesOutFileJs} and ${classNamesOutFileDts}`
  );
}
